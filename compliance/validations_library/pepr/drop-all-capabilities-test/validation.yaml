metadata:
  name: check-new-pods-drop-all-capabilities-test
  uuid: 912255cd-56da-4de2-983b-4b0c3e78ae17
domain: 
  type: kubernetes
  kubernetes-spec:
    create-resources:
      - name: dropAllCapabilities
        manifest: |
          apiVersion: v1
          kind: Pod
          metadata:
            name: require-drop-all-capabilities-1
            namespace: default
            labels:
              zarf.dev/agent: ignore
          spec:
            containers:
            - name: c1
              image: alpine:3.20
              args: ["sleep", "infinity"]
              securityContext:
                capabilities:
                  add: ["NET_BIND_SERVICE"]
          ---
          apiVersion: v1
          kind: Pod
          metadata:
            name: require-drop-all-capabilities-2
            namespace: default
            labels:
              zarf.dev/agent: ignore
          spec:
            containers:
            - name: c1
              image: alpine:3.20
              args: ["sleep", "infinity"]
              securityContext:
                capabilities:
                  drop: ["ALL"]
            initContainers:
            - name: i1
              image: alpine:3.20
              securityContext:
                capabilities:
                  add: ["NET_BIND_SERVICE"]
          ---
          apiVersion: v1
          kind: Pod
          metadata:
            name: require-drop-all-capabilities-3
            namespace: default
            labels:
              zarf.dev/agent: ignore
          spec:
          containers:
          - name: c1
            image: alpine:3.20
            args: ["sleep", "infinity"]
            securityContext:
              capabilities:
                drop: ["NET_ADMIN","DISALLOWED"]
          ---
          apiVersion: v1
          kind: Pod
          metadata:
            name: require-drop-all-capabilities-4
            namespace: default
            labels:
              zarf.dev/agent: ignore
          spec:
            containers:
            - name: c1
              image: alpine:3.20
              args: ["sleep", "infinity"]
              securityContext:
                capabilities:
                  drop: ["ALL"]
            initContainers:
            - name: i1
              image: alpine:3.20
              securityContext:
                capabilities:
                  drop: ["NET_ADMIN","DISALLOWED"]
          ---
          apiVersion: v1
          kind: Pod
          metadata:
            name: require-drop-all-capabilities-5
            namespace: default
            labels:
              zarf.dev/agent: ignore
          spec:
            containers:
            - name: c1
              image: alpine:3.20
              args: ["sleep", "infinity"]
              securityContext:
                capabilities:
                  drop: ["NET_ADMIN","ALL"]
            initContainers:
            - name: i1
              image: alpine:3.20
              securityContext:
                capabilities:
                  drop: ["NET_ADMIN","ALL"]
provider: 
  type: opa
  opa-spec:
    rego: |
      package validate
      import rego.v1

      # Default values
      default validate := false
      default msg := "Not evaluated"

      validate if {
        check_pods_dropped_capabilities.result
      }

      msg = check_pods_dropped_capabilities.msg

      # Check all pods dropped all capabilities
      pods_created := {pod.metadata.name | pod := input.dropAllCapabilities[_]; pod.kind == "Pod"}
      pods_expected := {"require-drop-all-capabilities-1", "require-drop-all-capabilities-2", "require-drop-all-capabilities-3", "require-drop-all-capabilities-4", "require-drop-all-capabilities-5"}
      pods_that_dropped_all := {pod.metadata.name | pod := input.dropAllCapabilities[_]; dropped_all(pod)}

      check_pods_dropped_capabilities = {"result": true, "msg": msg} if {
        pods_created == pods_expected
        pods_that_dropped_all == pods_created
        msg := "All pods dropped all capabilities."
      } else = {"result": false, "msg": msg} if {
        count(pods_created - pods_that_dropped_all) > 0
        msg := sprintf("Some pods didn't drop all capabilities: %v.", [concat(", ", pods_created - pods_that_dropped_all)])
      } 

      # Condition that specifies a pod is dropping all capabilities
      dropped_all(pod) if {
        containers := get_containers(pod)
        every container in containers{
          container.securityContext.capabilities.drop == ["ALL"]
        }
      }

      # Helper function to get all containers in a pod
      get_containers(pod) = {c | c := pod.spec.containers[_]} |
        {c | pod.spec.initContainers != null; c := pod.spec.initContainers[_]} |
        {c | pod.spec.ephemeralContainers != null; c := pod.spec.ephemeralContainers[_]}
    output:
      validation: validate.validate
      observations:
        - validate.msg